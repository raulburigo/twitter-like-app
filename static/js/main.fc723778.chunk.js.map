{"version":3,"sources":["functions/GetCookies.js","functions/BackendLookup.js","functions/ApiTweetAction.js","components/ActionBtn.js","components/UserPicture.js","components/UserLink.js","components/TweetTime.js","components/Tweet.js","functions/ApiTweetsList.js","components/TweetsList.js","functions/ApiTweetCreate.js","components/CharCounter.js","components/TweetCreateForm.js","components/TweetsMainApp.js","functions/ApiTweetDetail.js","components/TweetDetail.js","serviceWorker.js","functions/ApiTweetsFeed.js","components/TweetsFeed.js","components/FeedMainApp.js","functions/ApiProfileDetail.js","functions/ApiFollowAction.js","components/ProfileBadge.js","index.js"],"names":["getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","open","csrftoken","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","send","apiTweetAction","tweetId","action","id","ActionBtn","props","tweet","didPerformAction","target","likes","className","actionDisplay","display","type","handleActionBackendEvent","onClick","event","preventDefault","console","log","stopPropagation","UserPicture","user","username","style","cursor","UserLink","nameDisplay","includeFullName","first_name","last_name","Fragment","TweetTime","tweetDate","Date","parse","timestamp","deltaTime","now","timeObj","timeDisplay","parseInt","toString","getMonth","getDate","Tweet","didRetweet","tweetToDisplay","is_retweet","original_tweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","apiTweetsList","nextUrl","undefined","replace","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","results","next","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","apiTweetCreate","CharCounter","charsLeft","chars","TweetCreateForm","textAreaRef","React","createRef","didTweet","handleBackendUpdate","newTweetLen","setNewTweetLen","onSubmit","newVal","current","value","ref","onChange","required","TweetsMainApp","setNewTweets","canTweet","tempNewTweets","apiTweetDetail","TweetDetail","didLookup","setDidLookup","setTweet","handleBackendLookup","Boolean","hostname","apiTweetsFeed","TweetsFeed","FeedMainApp","apiProfileDetail","apiFollowAction","profile","ProfileBadge","setProfile","handleFollowBtn","is_self","is_following","numeral","followers","format","following","bio","tweetme2El","getElementById","ReactDOM","render","StrictMode","dataset","feedEl","tweetDetailElements","querySelectorAll","forEach","container","profileDetailElements","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fc723778.chunk.js","sourcesContent":["function getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport default getCookie;","import getCookie from './GetCookies'\r\n\r\nfunction backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data){\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://127.0.0.1:8000/api${endpoint}`\r\n  xhr.responseType = \"json\"\r\n  xhr.open(method, url)\r\n  const csrftoken = getCookie('csrftoken');\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n  if (csrftoken) {\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n  }\r\n  xhr.onload = function() {\r\n    if (xhr.status === 403) {\r\n      const detail = xhr.response.detail\r\n      if (detail === \"Authentication credentials were not provided.\") {\r\n        if (window.location.href.indexOf(\"login\") === -1) {\r\n          window.location.href = \"/login\" // or \"/login?showLoginRequired=true\"\r\n        }\r\n      }\r\n    }\r\n    callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = function() {\r\n    callback({\"message\": \"the request was an error\"}, 400)\r\n  }\r\n  xhr.send(jsonData)      \r\n};\r\n\r\nexport default backendLookup;\r\n","import backendLookup from './BackendLookup'\r\n\r\n\r\nfunction apiTweetAction(tweetId, action, callback) {\r\n  const data = {\r\n    id: tweetId,\r\n  //  content: newTweet,\r\n    action: action,\r\n  }\r\n  backendLookup(\r\n    \"POST\",\r\n    \"/tweets/action/\",\r\n    callback,\r\n    data\r\n  )\r\n}\r\n  \r\nexport default apiTweetAction;\r\n","import React from 'react'\r\nimport apiTweetAction from '../functions/ApiTweetAction'\r\n\r\n\r\nfunction ActionBtn(props) {\r\n    const {tweet, action, didPerformAction, target} = props\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n    const display = action.type === 'like' ? `${likes} ${action.display}` : actionDisplay\r\n\r\n    const handleActionBackendEvent = (response, status) => {\r\n        if ((status === 200 || status === 201) && didPerformAction) {\r\n            didPerformAction(response, status)\r\n        }\r\n    }\r\n    \r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        console.log(\"cliquei no \", target.id)\r\n        apiTweetAction(target.id, action.type, handleActionBackendEvent)\r\n        event.stopPropagation()\r\n\r\n\r\n    }\r\n    return (\r\n    <button className={className} onClick={handleClick}>\r\n        {display}\r\n    </button>\r\n    )\r\n}\r\n\r\nexport default ActionBtn;","import React from 'react'\r\n\r\n\r\nfunction UserPicture(props) {\r\n\r\n    const {user} = props\r\n\r\n    // get the user picture or username[0]\r\n\r\n    const handleClick = (event) => {\r\n        // this is similar as handleUserLink in UserLink component\r\n        window.location.href= `/profile/${user.username}`\r\n        event.stopPropagation()\r\n    }\r\n\r\n    return (\r\n        <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white' onClick={handleClick} style={{cursor:'pointer'}}>\r\n            {user.username[0]}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default UserPicture;","import React from 'react'\r\n\r\n\r\nfunction UserLink(props) {\r\n    \r\n    const {user, includeFullName} = props\r\n    const nameDisplay = includeFullName ? `${user.first_name} ${user.last_name} - ` : null\r\n\r\n    const handleUserLink = (event) => {\r\n        // this is similar as handleClick in UserPicture component\r\n        window.location.href= `/profile/${user.username}`\r\n        event.stopPropagation()\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {nameDisplay}\r\n            <span onClick={handleUserLink} style={{cursor:'pointer'}}>@{user.username}</span>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UserLink;\r\n","import React from 'react'\r\n\r\nfunction TweetTime(props) {\r\n\r\n  const {tweet} = props\r\n  var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n  const tweetDate = Date.parse(tweet.timestamp)\r\n  const deltaTime = (Date.now() - tweetDate)/1000\r\n  var timeObj = new Date(tweetDate)\r\n  let timeDisplay = \"\"\r\n  if (deltaTime < 2) {\r\n    timeDisplay = \"now\"\r\n  } else if (deltaTime < 60) {\r\n    timeDisplay = parseInt(deltaTime).toString() + \"s\"\r\n  } else if (deltaTime < 3600) {\r\n    timeDisplay = parseInt(deltaTime / 60).toString() + \"min\"\r\n  } else if (deltaTime < 86400) {\r\n    timeDisplay = parseInt(deltaTime / 3600).toString() + \"h\"\r\n  } else {\r\n    timeDisplay = months[timeObj.getMonth()] + \" \" + timeObj.getDate()\r\n  }\r\n\r\n  return (\r\n    <span className='small text-muted'> * {timeDisplay}</span>\r\n  )\r\n\r\n}\r\n\r\nexport default TweetTime;","import React, {useState} from 'react'\r\nimport ActionBtn from './ActionBtn'\r\nimport UserPicture from './UserPicture'\r\nimport UserLink from './UserLink'\r\nimport TweetTime from './TweetTime'\r\n\r\nfunction Tweet(props) {\r\n  const {tweet, didRetweet} = props\r\n  const tweetToDisplay = tweet.is_retweet ? tweet.original_tweet : tweet\r\n  const [actionTweet, setActionTweet] = useState(tweetToDisplay ? tweetToDisplay : null)\r\n  const path = window.location.pathname\r\n  const match = path.match(/(?<tweetid>\\d+)/)\r\n  const urlTweetId = match ? match.groups.tweetid : -1\r\n  const isDetail = `${tweetToDisplay.id}` === `${urlTweetId}`\r\n  \r\n  const handlePerformAction = (newActionTweet, status) => {\r\n    if (status === 200) {\r\n      setActionTweet(newActionTweet)\r\n    } else if (status === 201) {\r\n      if (didRetweet) {\r\n        didRetweet(newActionTweet)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleLink = (event) => {\r\n    event.preventDefault()\r\n    window.location.href = `/${tweetToDisplay.id}`\r\n    event.stopPropagation()\r\n  }\r\n  \r\n  return (\r\n\r\n    <div className={isDetail === true ? \"container-fluid border my-1\" : \"container-fluid border my-1 clickabletweet\"} \r\n          onClick={isDetail === true ? null : handleLink}>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          {tweet.is_retweet ? \r\n            <p className='small text-muted'><UserLink user={tweet.user} includeFullName={true}/> Retweeted</p> :\r\n            <p className='small text-muted'></p>\r\n          }\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className='d-flex'>\r\n            <div className=''>\r\n              <UserPicture user={tweetToDisplay.user}/>\r\n            </div>\r\n            <div className='col-11'>\r\n              <div>\r\n                <p>\r\n                  <UserLink user={tweetToDisplay.user} includeFullName={true}/>\r\n                  <TweetTime tweet={tweetToDisplay}/>\r\n                </p>\r\n                <p style={{\"wordWrap\":\"break-word\"}}>{tweetToDisplay.content}</p>\r\n              </div>\r\n              <div className='btn btn-group px-0'>          \r\n                <React.Fragment>\r\n                  <ActionBtn tweet={actionTweet} target={tweetToDisplay} didPerformAction={handlePerformAction} action={{type: \"like\", display:\"Likes\"}}/>\r\n                  <ActionBtn tweet={actionTweet} target={tweetToDisplay} didPerformAction={handlePerformAction} action={{type: \"unlike\", display:\"Unlike\"}}/>\r\n                  <ActionBtn tweet={actionTweet} target={tweetToDisplay} didPerformAction={handlePerformAction} action={{type: \"retweet\", display:\"Retweet\"}}/>\r\n                </React.Fragment>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tweet;\r\n","import backendLookup from './BackendLookup'\r\n\r\n\r\nfunction apiTweetsList(username, callback, nextUrl) {\r\n  let endpoint = \"/tweets/\"\r\n  if (username) {\r\n    endpoint = `/tweets/?username=${username}`\r\n  }\r\n  if (nextUrl !== null && nextUrl !== undefined) {\r\n    endpoint = nextUrl.replace(\"http://127.0.0.1:8000/api\", \"\")\r\n  }\r\n\r\n  backendLookup(\r\n    \"GET\",\r\n    endpoint,\r\n    callback\r\n  )\r\n}\r\n\r\nexport default apiTweetsList;\r\n  ","import React, {useEffect, useState} from 'react';\r\nimport Tweet from './Tweet';\r\nimport apiTweetsList from '../functions/ApiTweetsList'\r\n\r\nfunction TweetsList(props) {\r\n\r\n  const [tweetsInit, setTweetsInit] = useState([])\r\n  const [tweets, setTweets] = useState([])\r\n  const [nextUrl, setNextUrl] = useState(null)\r\n  const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n\r\n  useEffect(() => {\r\n    let final = [...props.newTweets].concat(tweetsInit)\r\n    if (final.length !== tweets.length) {\r\n      setTweets(final)\r\n    }\r\n  }, [props.newTweets, tweets, tweetsInit])\r\n\r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      const handleTweetListLookup = (response, status) => {\r\n        if (status === 200) {\r\n          setTweetsInit(response.results)\r\n          setNextUrl(response.next)\r\n          setTweetsDidSet(true)\r\n        } else {\r\n          alert(\"there was an error here!\")\r\n        }\r\n      }\r\n      apiTweetsList(props.username, handleTweetListLookup)\r\n    }\r\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n    const updateTweetsInit = [...tweetsInit]\r\n    updateTweetsInit.unshift(newTweet)\r\n    setTweetsInit(updateTweetsInit)\r\n    const updateFinalTweets = [...tweets]\r\n    updateFinalTweets.unshift(newTweet)\r\n    setTweets(updateFinalTweets)  \r\n  }\r\n\r\n  const handleLoadNext = (event) => {\r\n    event.preventDefault()\r\n    if (nextUrl !== null) {\r\n      const handleLoadNextResponse = (response, status) => {\r\n        if (status === 200) {\r\n          setNextUrl(response.next)\r\n          const newTweets = [...tweets].concat(response.results)\r\n          setTweetsInit(newTweets)\r\n          setTweets(newTweets)\r\n        } else {\r\n          alert(\"there was an error here!\")\r\n        }\r\n      }\r\n      apiTweetsList(props.username, handleLoadNextResponse, nextUrl)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        {tweets.map((item, index) => {\r\n        return <Tweet\r\n            tweet={item}\r\n            didRetweet={handleDidRetweet}\r\n            className='my-5 py-3 px-2 border bg-white text-dark'\r\n            key={`${index}-{item.id}`}\r\n        />\r\n        })}\r\n      { nextUrl !== null && <button className=\"btn btn-outline-primary\" onClick={handleLoadNext}>Show More</button>}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TweetsList;\r\n","import backendLookup from './BackendLookup'\r\n\r\n\r\nfunction apiTweetCreate(newTweet, callback) {\r\n  backendLookup(\r\n    \"POST\",\r\n    \"/tweets/create/\",\r\n    callback,\r\n    {content: newTweet}\r\n  )\r\n}\r\n  \r\nexport default apiTweetCreate;\r\n","import React from 'react'\r\n\r\nfunction CharCounter(props) {\r\n\r\n    const {chars} = props\r\n    const charLimit = 240\r\n    var charsLeft = charLimit - chars\r\n    var style = {\r\n        \"color\": \"black\"\r\n    }\r\n    if (charsLeft < 20 && charsLeft >= 0) {\r\n        style = {\r\n            \"color\": \"red\",\r\n        }\r\n    } else if (charsLeft < 0) {\r\n        style = {\r\n            \"color\": \"LightGray\",\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <p className='small float-right' style={style}>{charsLeft}</p>\r\n        \r\n        )\r\n}\r\n\r\nexport default CharCounter;","import React, {useState} from 'react'\r\nimport apiTweetCreate from '../functions/ApiTweetCreate'\r\nimport CharCounter from './CharCounter'\r\n\r\nfunction TweetCreateForm(props) {\r\n\r\n    const textAreaRef = React.createRef()\r\n    const {didTweet} = props\r\n    const handleBackendUpdate = (response, status) => {\r\n        // backend api response handler\r\n        if (status === 201) {\r\n            didTweet(response)\r\n        } else if (status === 403 && response.detail === \"Authentication credentials were not provided.\") {\r\n            alert(\"You must log in first.\")\r\n        } else {\r\n            alert(\"An error ocurred, please try again\")\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        // backend api request\r\n        event.preventDefault()\r\n        const newVal = textAreaRef.current.value\r\n        apiTweetCreate(newVal, handleBackendUpdate)\r\n        textAreaRef.current.value = ''\r\n        setNewTweetLen(textAreaRef.current.value.length)\r\n    }\r\n\r\n    const [newTweetLen, setNewTweetLen] = useState(0)\r\n\r\n    const teste = (event) => {\r\n        event.preventDefault()\r\n        setNewTweetLen(textAreaRef.current.value.length)\r\n    }\r\n\r\n    return (\r\n        <div className={props.className}>\r\n            <form onSubmit={handleSubmit}>\r\n                <textarea ref={textAreaRef} onChange={teste} required={true} className='form-control' name=\"tweet\"></textarea>\r\n                <div>\r\n                    <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n                    <CharCounter chars={newTweetLen}/>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TweetCreateForm;","import React, {useState} from 'react'\r\nimport TweetsList from './TweetsList'\r\nimport TweetCreateForm from './TweetCreateForm'\r\n\r\nfunction TweetsMainApp(props) {\r\n\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const canTweet = props.data.canTweet === \"false\" ? false : true\r\n\r\n    const handleNewTweet = (newTweet) => {\r\n        let tempNewTweets = [...newTweets]\r\n        tempNewTweets.unshift(newTweet)\r\n        setNewTweets(tempNewTweets)\r\n    }\r\n\r\n    return (\r\n        <div className={props.className}>\r\n            {canTweet === true && <TweetCreateForm className='col-12 mb-3' didTweet={handleNewTweet}/>}\r\n            <TweetsList newTweets={newTweets} username={props.data.username}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TweetsMainApp;","import backendLookup from './BackendLookup'\r\n\r\n\r\nfunction apiTweetDetail(tweetId, callback) {\r\n\r\n  backendLookup(\r\n    \"GET\",\r\n    `/tweets/${tweetId}`,\r\n    callback\r\n  )\r\n}\r\n\r\nexport default apiTweetDetail;\r\n  ","import React, {useState, useEffect} from 'react'\r\nimport Tweet from './Tweet'\r\nimport apiTweetDetail from '../functions/ApiTweetDetail'\r\n\r\nfunction TweetDetail(props) {\r\n    const {tweetId} = props.data\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [tweet, setTweet] = useState(null)\r\n    const handleBackendLookup = (response, status) => {\r\n        if (status === 200) {\r\n            setTweet(response)\r\n        } else {\r\n            alert(\"The was an error finding your tweet.\")\r\n        }\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if (didLookup === false) {\r\n            apiTweetDetail(tweetId, handleBackendLookup)\r\n            setDidLookup(true)\r\n        }\r\n    }, [tweetId, didLookup, setDidLookup])\r\n\r\n    return ( tweet === null ? null :\r\n        <Tweet tweet={tweet} className={props.className} />\r\n    )\r\n};\r\n\r\nexport default TweetDetail;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import backendLookup from './BackendLookup'\r\n\r\n\r\nfunction apiTweetsFeed(callback, nextUrl) {\r\n  let endpoint = \"/tweets/feed\"\r\n  if (nextUrl !== null && nextUrl !== undefined) {\r\n    endpoint = nextUrl.replace(\"http://127.0.0.1:8000/api\", \"\")\r\n  }\r\n\r\n  backendLookup(\r\n    \"GET\",\r\n    endpoint,\r\n    callback\r\n  )\r\n}\r\n\r\nexport default apiTweetsFeed;\r\n  ","import React, {useEffect, useState} from 'react';\r\nimport Tweet from './Tweet';\r\nimport apiTweetsFeed from '../functions/ApiTweetsFeed'\r\n\r\nfunction TweetsFeed(props){\r\n\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n  \r\n    useEffect(() => {\r\n      let final = [...props.newTweets].concat(tweetsInit)\r\n      console.log([...props.newTweets])\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n  \r\n    useEffect(() => {\r\n      if (tweetsDidSet === false) {\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200) {\r\n            setTweetsInit(response.results)\r\n            setNextUrl(response.next)\r\n            setTweetsDidSet(true)\r\n          }\r\n        }\r\n        apiTweetsFeed(handleTweetListLookup)\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet])\r\n  \r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      // const updateFinalTweets = [...tweets]\r\n      // updateFinalTweets.unshift(newTweet)\r\n      // setTweets(updateFinalTweets)\r\n    }\r\n  \r\n    const handleLoadNext = (event) => {\r\n      event.preventDefault()\r\n      if (nextUrl !== null) {\r\n        const handleLoadNextResponse = (response, status) => {\r\n          if (status === 200) {\r\n            setNextUrl(response.next)\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweetsInit(newTweets)\r\n            setTweets(newTweets)\r\n          }\r\n        }\r\n        apiTweetsFeed(handleLoadNextResponse, nextUrl)\r\n      }\r\n    }\r\n  \r\n    return (\r\n      <React.Fragment>\r\n          {tweets.map((item, index) => {\r\n          return <Tweet\r\n              tweet={item}\r\n              didRetweet={handleDidRetweet}\r\n              className='my-5 py-3 px-2 border bg-white text-dark'\r\n              key={`${index}-{item.id}`}\r\n          />\r\n          })}\r\n        { nextUrl !== null && <button className=\"btn btn-outline-primary\" onClick={handleLoadNext}>Show More</button>}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  \r\nexport default TweetsFeed;","import React, {useState} from 'react'\r\nimport TweetsFeed from './TweetsFeed'\r\nimport TweetCreateForm from './TweetCreateForm'\r\n\r\nfunction FeedMainApp(props) {\r\n\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const canTweet = props.data.canTweet === \"false\" ? false : true\r\n\r\n    const handleNewTweet = (newTweet) => {\r\n        let tempNewTweets = [...newTweets]\r\n        tempNewTweets.unshift(newTweet)\r\n        setNewTweets(tempNewTweets)\r\n    }\r\n \r\n    return (\r\n        <div className={props.className}>\r\n            {canTweet === true && <TweetCreateForm className='col-12 mb-3' didTweet={handleNewTweet}/>}\r\n            <TweetsFeed newTweets={newTweets}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FeedMainApp;","import backendLookup from './BackendLookup'\r\n\r\n\r\nfunction apiProfileDetail(username, callback) {\r\n\r\n  backendLookup(\r\n    \"GET\",\r\n    `/profiles/${username}`,\r\n    callback\r\n  )\r\n}\r\n\r\nexport default apiProfileDetail;\r\n","import backendLookup from './BackendLookup'\r\n\r\n\r\nfunction apiFollowAction(profile, action, callback) {\r\n  const data = {\r\n    action: `${action ? action : ''}`,\r\n  }\r\n  backendLookup(\r\n    \"POST\",\r\n    `/profiles/${profile}/follow`,\r\n    callback,\r\n    data\r\n  )\r\n}\r\n  \r\nexport default apiFollowAction;\r\n","import React, {useState, useEffect} from 'react'\r\nimport apiProfileDetail from '../functions/ApiProfileDetail'\r\nimport apiFollowAction from '../functions/ApiFollowAction'\r\nimport numeral from 'numeral'\r\n\r\nfunction ProfileBadge(props) {\r\n\r\n    const {username} = props.data\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [profile, setProfile] = useState(null)\r\n    const handleBackendLookup = (response, status) => {\r\n        if (status === 200) {\r\n            setProfile(response)\r\n        }\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if (didLookup === false) {\r\n            apiProfileDetail(username, handleBackendLookup)\r\n            setDidLookup(true)\r\n        }\r\n    }, [username, didLookup, setDidLookup])\r\n\r\n    const handleFollowBtn = (event) => {\r\n        event.preventDefault()\r\n        if (profile.is_self) {\r\n            window.location.href = \"/profile/edit\"\r\n        } else {\r\n            if (profile.is_following === true) {\r\n                apiFollowAction(profile.username, \"unfollow\", handleBackendLookup)\r\n            } else {\r\n                apiFollowAction(profile.username, \"follow\", handleBackendLookup)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        didLookup === false ? \"loading...\" : profile ?\r\n        <div className=\"my-4 mx-4\">\r\n            <p>\r\n                <span className='mx-2 px-3 py-2 rounded-circle bg-dark text-white'>{profile.username[0]}</span>\r\n                <span>{profile.first_name} {profile.last_name} - @{profile.username}</span>\r\n            </p>\r\n            <p>{profile.location}</p>\r\n            <p>Followers: {numeral(profile.followers).format(\"0a\")} | Following: {numeral(profile.following).format(\"0a\")}</p>\r\n            {profile.is_self === true ? <button onClick={handleFollowBtn} className='btn btn-outline-primary mb-3'>Edit profile</button> :\r\n            profile.is_following === true ?\r\n            <button onClick={handleFollowBtn} className='btn btn-primary mb-3' id='unfollowBtn'><span>Following</span></button> :\r\n            <button onClick={handleFollowBtn} className='btn btn-outline-primary mb-3'>Follow</button>\r\n            }\r\n            <p>{profile.bio}</p>\r\n        </div>\r\n        : null\r\n    )\r\n}\r\n\r\nexport default ProfileBadge;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TweetsMainApp from './components/TweetsMainApp'\nimport TweetDetail from './components/TweetDetail'\nimport * as serviceWorker from './serviceWorker';\nimport FeedMainApp from './components/FeedMainApp';\nimport ProfileBadge from './components/ProfileBadge'\n\nconst tweetme2El = document.getElementById('tweetme2app')\nif (tweetme2El) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <TweetsMainApp data={tweetme2El.dataset}/>\n    </React.StrictMode>,\n    tweetme2El\n  );\n};\n\nconst feedEl = document.getElementById('tweetme-feed')\nif (feedEl) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <FeedMainApp data={feedEl.dataset}/>\n    </React.StrictMode>,\n    feedEl\n  );\n};\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\")\nif (tweetDetailElements) {\n  tweetDetailElements.forEach(container=> {\n    ReactDOM.render(\n      <React.StrictMode>\n        <TweetDetail data={container.dataset}/>\n      </React.StrictMode>,\n      container\n    )\n  })\n}\n\nconst profileDetailElements = document.getElementById('tweetme-2-profile')\nif (profileDetailElements) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <ProfileBadge data={profileDetailElements.dataset}/>\n    </React.StrictMode>,\n    profileDetailElements\n  );\n};\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}